#!/bin/bash

# Exit on command errors and treat unset variables as an error
set -eu

app=$YNH_APP_INSTANCE_NAME

# Source YunoHost helpers
source /usr/share/yunohost/helpers

# Retrieve arguments
domain=$YNH_APP_ARG_DOMAIN
path=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC


# Check domain/path availability
sudo yunohost app checkurl $domain$path -a $app
if [[ ! $? -eq 0 ]]; then
    exit 1
fi

# Store config on YunoHost instance
ynh_app_setting_set "$app" version "3.8.0"
ynh_app_setting_set "$app" domain "$domain"
ynh_app_setting_set "$app" path "$path"
ynh_app_setting_set "$app" is_public "$is_public"

# Remove trailing "/" for next commands
path=${path%/}

# Generate MySQL password and create database
dbuser=$app
dbname=$app
dbpass=$(ynh_string_random 12)
ynh_mysql_create_db "$dbname" "$dbuser" "$dbpass"
ynh_app_setting_set "$app" dbpass "$dbpass"
ynh_app_setting_set "$app" dbuser "$dbuser"
ynh_app_setting_set "$app" dbname "$dbname"

# create app dir and copy sources
final_path=/var/www/$app
sudo mkdir -p $final_path
sudo cp -a ../sources/dolibarr/htdocs/* $final_path

sudo mkdir $final_path/documents

final_conf_path=$final_path/conf/conf.php
sudo cp ../conf/conf.php $final_conf_path

sudo sed -i "s@YNH_MAIN_URL@$domain$path@g" $final_conf_path
sudo sed -i "s@YNH_DOC_ROOT@$final_path@g" $final_conf_path
sudo sed -i "s@YNH_DATA_ROOT@$final_path\/documents@g" $final_conf_path
sudo sed -i "s@YNH_DB_NAME@$dbname@g" $final_conf_path
sudo sed -i "s@YNH_DB_USER@$dbuser@g" $final_conf_path
sudo sed -i "s@YNH_DB_PASS@$dbpass@g" $final_conf_path

sudo chown -R www-data: $final_path

# nginx
nginx_conf_path=/etc/nginx/conf.d/$domain.d/$app.conf
sudo cp ../conf/nginx.conf $nginx_conf_path

if [ "$path" = "" ]; then
  sudo sed -i "s@PATHTOCHANGE@/@g" $nginx_conf_path
else
  # Modify Nginx configuration file
  sudo sed -i "s@PATHTOCHANGE@${path:-/}@g" $nginx_conf_path
fi
sudo sed -i "s@DESTDIRTOCHANGE@$final_path/@g" $nginx_conf_path
sudo sed -i "s@NAMETOCHANGE@$app@g" $nginx_conf_path

# If app is public, add url to SSOWat conf as skipped_uris
if [[ $is_public -eq 1 ]]; then
	# unprotected_uris allows SSO credentials to be passed anyway.
  ynh_app_setting_set "$app" unprotected_uris "/"
fi

# db_pwd=$(dd if=/dev/urandom bs=1 count=200 2> /dev/null | tr -c -d '[A-Za-z0-9]' | sed -n 's/\(.\{24\}\).*/\1/p')
# sudo yunohost app initdb dolibarr -p $db_pwd

# php fpm conf
php_conf_path=/etc/php5/fpm/pool.d/$app.conf
sudo cp ../conf/php-fpm.conf $php_conf_path
sudo sed -i "s@NAMETOCHANGE@$app@g" $php_conf_path
sudo chown root: $php_conf_path
sudo chmod 644 $php_conf_path

# Reload Nginx and regenerate SSOwat conf
sudo service php5-fpm restart
sudo service nginx reload
sudo yunohost app ssowatconf

# sudo yunohost app setting dolibarr unprotected_uris -v "/"
# sudo yunohost app ssowatconf

# curl -kL -H "Host: $domain" -X POST https://127.0.0.1$path/install/setp1.php --data "testpost=ok&action=set&main_dir=%2Fvar%2Fwww%2Fdolibarr%2Fhtdocs&main_data_dir=%2Fvar%2Fwww%2Fdolibarr%2Fdocuments&main_url=https://$domain$path&db_name=dolibarr&db_type=mysqli&db_host=localhost&db_port=&db_prefix=llx_&db_user=dolibarr&db_pass=$db_pwd&selectlang=fr_FR" > /dev/null 2>&1
#
# curl -kL -H "Host: $domain" -X POST https://127.0.0.1$path/install/setp2.php --data "testpost=ok&action=set&dolibarr_main_db_character_set=latin1&dolibarr_main_db_collation=latin1_swedish_ci&selectlang=fr_FR" > /dev/null 2>&1
#
# curl -kL -H "Host: $domain" -X POST https://127.0.0.1$path/install/setp4.php --data "testpost=ok&action=set&selectlang=fr_FR" > /dev/null 2>&1
#
# curl -kL -H "Host: $domain" -X POST https://127.0.0.1$path/install/setp5.php --data "testpost=ok&action=set&login=admin&pass=neutrinet&pass_verif=neutrinet&selectlang=fr_FR" > /dev/null 2>&1


# TODO
# Attention, pour des raisons de sécurité, afin de bloquer une nouvelle utilisation des outils d'installation/migration, une fois l'installation terminée, il est conseillé de placer dans le répertoire document de Dolibarr un fichier nommé install.lock en lecture seule.
sudo touch $final_path/install.lock
sudo chown www-data: $final_path/install.lock
sudo chmod -wx $final_path/install.lock
